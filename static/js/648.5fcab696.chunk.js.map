{"version":3,"file":"static/js/648.5fcab696.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nexport const SearchBar = ({ setQuery }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    setQuery(inputValue);\n  };\n\n  return (\n    <Header>\n      <FormSearch onSubmit={onSubmit}>\n        <BtnSearch type=\"submit\">\n          <FaSearch\n            size={40}\n            color=\"gray\"\n            onMouseOver={({ target }) => (target.style.color = 'black')}\n            onMouseOut={({ target }) => (target.style.color = 'gray')}\n          />\n        </BtnSearch>\n\n        <InputSearch\n          type=\"text\"\n          placeholder=\"Search movie\"\n          name=\"inputValue\"\n          value={inputValue}\n          onChange={e => setInputValue(e.target.value)}\n          required\n        />\n      </FormSearch>\n    </Header>\n  );\n};\nexport default SearchBar;\n\nconst Header = styled.header`\n  height: 100px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FormSearch = styled.form`\n  border: 3px solid gray;\n  display: flex;\n  width: 40%;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  justify-content: space-between;\n`;\nconst InputSearch = styled.input`\n  background: gray;\n  color: white;\n  width: 87%;\n  height: 50px;\n  border: none;\n  outline: transparent;\n  font-size: 24px;\n  padding-left: 10px;\n`;\n\nconst BtnSearch = styled.button`\n  background: white;\n  border: none;\n  outline: transparent;\n  height: 52px;\n  width: 10%;\n  cursor: pointer;\n  transition: all 0.5s ease;\n  &:hover {\n    background: transparent;\n    transform: scale(1.1);\n  }\n`;\n","import SearchBar from 'components/SearchBar/SearchBar';\nimport React, { useEffect, useState } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesBySearch } from 'services/api';\nimport imgMovieDefault from '../img/Poster_in_the_process.jpg';\nimport styled from 'styled-components';\nconst imgLink = 'https://image.tmdb.org/t/p/w500';\n\nconst Movie = () => {\n  const [moviesData, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const movie = searchParams.get('movie') ?? '';\n\n  const updateQueryString = query => {\n    query !== '' ? setSearchParams({ movie: query }) : setSearchParams({});\n  };\n\n  useEffect(() => {\n    async function getNewMovies() {\n      try {\n        const moviesDataNew = await fetchMoviesBySearch(movie);\n        setMovies(moviesDataNew);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getNewMovies();\n  }, [movie]);\n\n  return (\n    <>\n      <SearchBar setQuery={updateQueryString} />\n      <MovieList>\n        {moviesData.map(movie => (\n          <MovieItem key={movie.id}>\n            <StyledNavLink state={{ from: location }} to={movie.id.toString()}>\n              {movie.poster_path === null ? (\n                <img\n                  src={imgMovieDefault}\n                  // src=\"/src/img/Poster_in_the_process.jpg\"\n                  alt={movie.title}\n                />\n              ) : (\n                <img src={`${imgLink + movie.poster_path}`} alt={movie.title} />\n              )}\n              <p>{movie.title}</p>\n              <p>{movie.media_type}</p>\n            </StyledNavLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nexport default Movie;\n\nconst MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 200px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst MovieItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  /* width: 20%; */\n  padding: 10px;\n  border: 2px solid silver;\n  transition: transform 0.5s ease;\n  &:hover {\n    transform: scale(1.01);\n    box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;\n    /* transform: rotate(1deg); */\n    /* transform: matrix(0, 1, 1, 0, 0, 0); */\n  }\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-weight: 700;\n\n  img {\n    width: 100%;\n    height: 400px;\n    object-fit: cover;\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '7b2ac305a76388b1525771ad00b10673';\n\nexport const fetchMoviesTrend = async () => {\n  const { data } = await axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMoviesById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMoviesBySearch = async inputValue => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: inputValue,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?language=en-US&page=1`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return data.results;\n};\n\nexport const fetchMoviesCast = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/credits?language=en-US&page=1`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return data;\n};\n"],"names":["_ref","setQuery","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_jsx","Header","children","_jsxs","FormSearch","onSubmit","event","preventDefault","BtnSearch","type","FaSearch","size","color","onMouseOver","_ref2","target","style","onMouseOut","_ref3","InputSearch","placeholder","name","value","onChange","e","required","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_searchParams$get","moviesData","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","movie","get","useEffect","_getNewMovies","_asyncToGenerator","_regeneratorRuntime","_callee","moviesDataNew","_context","prev","next","fetchMoviesBySearch","sent","t0","console","log","stop","apply","arguments","getNewMovies","_Fragment","SearchBar","query","MovieList","map","MovieItem","StyledNavLink","state","from","to","id","toString","poster_path","src","imgMovieDefault","alt","title","concat","media_type","NavLink","axios","API_KEY","fetchMoviesTrend","_yield$axios$get","data","params","api_key","abrupt","fetchMoviesById","_callee2","_yield$axios$get2","_context2","_x","_callee3","_yield$axios$get3","_context3","results","_x2","fetchMoviesReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMoviesCast","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}