{"version":3,"file":"static/js/999.b2fff7d5.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCast } from 'services/api';\nimport styled from 'styled-components';\nimport imgActorDefault from '../../img/actor-cast.png';\n\nconst imgLink = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesCast(movieId).then(res => setCast(res.cast));\n  }, [movieId]);\n  return (\n    <>\n      <CastList>\n        {cast.length !== 0 ? (\n          cast.map(item => (\n            <Card key={item.id}>\n              {item.profile_path === null ? (\n                <ActorImg src={imgActorDefault} alt={item.original_name} />\n              ) : (\n                <ActorImg\n                  src={`${imgLink + item.profile_path}`}\n                  alt={item.original_name}\n                />\n              )}\n\n              <div>\n                <h3>{item.name}</h3>\n                <span>\n                  <b>Role:</b> {item.character}\n                </span>\n              </div>\n            </Card>\n          ))\n        ) : (\n          <h2>\n            We do not have information about the cast, or they have wished to\n            remain anonymous.\n          </h2>\n        )}\n      </CastList>\n    </>\n  );\n};\nexport default Cast;\n\nconst CastList = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 80%;\n  margin: 0 auto;\n  h2 {\n    line-height: 20px;\n    font-weight: 700;\n    font-size: 14px;\n  }\n`;\n\nconst Card = styled.li`\n  display: flex;\n  align-items: center;\n  flex-basis: 33%;\n  margin-bottom: 35px;\n\n  h3 {\n    font-size: 20px;\n    color: tomato;\n    margin-top: 0;\n    margin-bottom: 6px;\n  }\n  span {\n    color: #a5a5a5;\n    font-size: 18px;\n  }\n`;\nconst ActorImg = styled.img`\n  width: 120px;\n  height: 120px;\n  object-fit: cover;\n  border-radius: 10px;\n  margin-right: 20px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '7b2ac305a76388b1525771ad00b10673';\n\nexport const fetchMoviesTrend = async () => {\n  const { data } = await axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMoviesById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMoviesBySearch = async inputValue => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: inputValue,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?language=en-US&page=1`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return data.results;\n};\n\nexport const fetchMoviesCast = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/credits?language=en-US&page=1`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return data;\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMoviesCast","then","res","_jsx","_Fragment","children","CastList","length","map","item","_jsxs","Card","profile_path","ActorImg","src","imgActorDefault","alt","original_name","concat","name","character","id","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","axios","API_KEY","fetchMoviesTrend","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","params","api_key","sent","abrupt","stop","apply","arguments","fetchMoviesById","_ref2","_callee2","_yield$axios$get2","_context2","_x","fetchMoviesBySearch","_ref3","_callee3","inputValue","_yield$axios$get3","_context3","query","results","_x2","fetchMoviesReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}